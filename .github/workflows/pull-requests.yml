name: pull-requests

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv for discord_bot_eternal_dice
        id: cached-discord-bot-eternal-dice-poetry
        uses: actions/cache@v3
        with:
          path: |
            discord_bot_eternal_dice/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('discord_bot_eternal_dice/poetry.lock') }}

      - name: Poetry install for discord_bot_eternal_dice/
        run: cd discord_bot_eternal_dice && poetry install
        if: steps.cached-discord-bot-eternal-dice-poetry.outputs.cache-hit != 'true'

      - name: Load cached venv for infra
        id: cached-infra-poetry
        uses: actions/cache@v3
        with:
          path: infra/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('infra/poetry.lock') }}

      - name: Poetry install for infra/
        run: cd infra && poetry install
        if: steps.cached-infra-poetry.outputs.cache-hit != 'true'

      - name: Flake8
        run: cd discord_bot_eternal_dice && poetry run flake8 --config ../.flake8 ./tests ./discord_bot_eternal_dice ../error_handler ../infra

      - name: Pytest
        run: cd discord_bot_eternal_dice && poetry run pytest --cov=discord_bot_eternal_dice --cov-report=xml

#      - name: Package discord_bot_eternal_dice
#        run: cd discord_bot_eternal_dice/ && npx serverless package && cd ../
#
#      - name: Package error-parser
#        run: cd error_parser_function/ && npx serverless package && cd ../
#
#      - name: Synthesize CDK
#        run: cd infra && poetry run npx cdk synth --output build/cdk.out
#        env:
#          AWS_REGION: ${{ secrets.AWS_REGION }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_TARGET_ACCOUNT: ${{ secrets.AWS_TARGET_ACCOUNT }}
#          DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
#          DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
#          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
#          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
